{"ast":null,"code":"var _jsxFileName = \"/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckView.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport ContextInformation from \"./ContextInformation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const context = useContext(ContextInformation);\n\n  const removeCard = (e, card, index, deck) => {\n    e.preventDefault();\n    let newDeck = [...deck];\n    card.count--;\n\n    if (card.count === 0) {\n      newDeck.splice(index, 1);\n    } else {\n      newDeck[index] = card;\n    }\n\n    context.setDeck(newDeck);\n  };\n\n  const addCard = (e, card, index, deck) => {\n    e.preventDefault();\n    let newDeck = [...deck];\n    card.count++;\n    newDeck[index] = card;\n    context.setDeck(newDeck);\n  };\n\n  const loadCardPage = (e, card) => {\n    e.preventDefault();\n    window.open(card.scryfall_uri, \"_blank\");\n  };\n\n  const renderCard = (card, index, deck) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-name\",\n        onClick: e => loadCardPage(e, card),\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-count\",\n        children: [\"x\", card.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modification-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeCard(e, card, index, deck),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-count\",\n          children: [\"x\", card.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => addCard(e, card, index, deck),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-view\",\n    children: context.deck.map(renderCard)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckView, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckView.js"],"names":["useContext","ContextInformation","DeckView","context","removeCard","e","card","index","deck","preventDefault","newDeck","count","splice","setDeck","addCard","loadCardPage","window","open","scryfall_uri","renderCard","name","map"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAIA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,OAAO,GAAGH,UAAU,CAACC,kBAAD,CAA1B;;AAEA,QAAMG,UAAU,GAAG,CAACC,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,KAA0B;AACzCH,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,OAAO,GAAG,CAAC,GAAGF,IAAJ,CAAd;AACAF,IAAAA,IAAI,CAACK,KAAL;;AACA,QAAGL,IAAI,CAACK,KAAL,KAAe,CAAlB,EAAqB;AACjBD,MAAAA,OAAO,CAACE,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACH,KAFD,MAEO;AACHG,MAAAA,OAAO,CAACH,KAAD,CAAP,GAAiBD,IAAjB;AACH;;AACDH,IAAAA,OAAO,CAACU,OAAR,CAAgBH,OAAhB;AACH,GAVD;;AAYA,QAAMI,OAAO,GAAG,CAACT,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,KAA0B;AACtCH,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,OAAO,GAAG,CAAC,GAAGF,IAAJ,CAAd;AACAF,IAAAA,IAAI,CAACK,KAAL;AACAD,IAAAA,OAAO,CAACH,KAAD,CAAP,GAAiBD,IAAjB;AACAH,IAAAA,OAAO,CAACU,OAAR,CAAgBH,OAAhB;AACH,GAND;;AAQA,QAAMK,YAAY,GAAG,CAACV,CAAD,EAAIC,IAAJ,KAAa;AAC9BD,IAAAA,CAAC,CAACI,cAAF;AACAO,IAAAA,MAAM,CAACC,IAAP,CAAYX,IAAI,CAACY,YAAjB,EAA+B,QAA/B;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,CAACb,IAAD,EAAOC,KAAP,EAAcC,IAAd,KAAuB;AACtC,wBAAQ;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,OAAO,EAAEH,CAAC,IAAGU,YAAY,CAAEV,CAAF,EAAKC,IAAL,CAApD;AAAA,kBACKA,IAAI,CAACc;AADV;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,wBACMd,IAAI,CAACK,KADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAEN,CAAC,IAAID,UAAU,CAACC,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,0BACMF,IAAI,CAACK,KADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAKI;AAAQ,UAAA,OAAO,EAAEN,CAAC,IAAIS,OAAO,CAACT,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAeH,GAhBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKL,OAAO,CAACK,IAAR,CAAaa,GAAb,CAAiBF,UAAjB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArDQjB,Q;;KAAAA,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import { useContext } from 'react';\n\nimport ContextInformation from \"./ContextInformation\";\n\n\n\nfunction DeckView() {\n    const context = useContext(ContextInformation);\n\n    const removeCard = (e, card, index, deck) => {\n        e.preventDefault();\n        let newDeck = [...deck];\n        card.count--;\n        if(card.count === 0) {\n            newDeck.splice(index, 1);\n        } else {\n            newDeck[index] = card;\n        }\n        context.setDeck(newDeck);\n    }\n\n    const addCard = (e, card, index, deck) => {\n        e.preventDefault();\n        let newDeck = [...deck];\n        card.count++;\n        newDeck[index] = card;\n        context.setDeck(newDeck);\n    }\n    \n    const loadCardPage = (e, card) => {\n        e.preventDefault();\n        window.open(card.scryfall_uri, \"_blank\");\n    }\n\n    const renderCard = (card, index, deck) => {\n        return (<div>\n                    <div className=\"card-name\" onClick={e=> loadCardPage (e, card)}>\n                        {card.name}\n                    </div> \n                    <div className=\"card-count\">\n                        x{card.count}\n                    </div>\n                    <div className=\"modification-buttons\">\n                        <button onClick={e => removeCard(e, card, index, deck)}>-</button>\n                    <div className=\"card-count\">\n                        x{card.count}\n                    </div>\n                        <button onClick={e => addCard(e, card, index, deck)}>+</button>\n                    </div>\n                </div>);\n    }\n\n    \n\n    return (\n        <div className=\"deck-view\">\n            {context.deck.map(renderCard)}\n        </div>\n    );\n}\n\nexport default DeckView;"]},"metadata":{},"sourceType":"module"}