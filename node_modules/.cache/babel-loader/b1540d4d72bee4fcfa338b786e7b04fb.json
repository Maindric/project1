{"ast":null,"code":"var _jsxFileName = \"/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckBuilder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport ContextInformation from \"./ContextInformation\";\nimport SearchResults from './SearchResults';\nimport DeckView from './DeckView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckBuilder() {\n  _s();\n\n  const context = useContext(ContextInformation);\n  const searchText = useRef(null);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    console.log(searchResults);\n  }, [searchResults]);\n\n  const submitSearch = e => {\n    e.preventDefault();\n\n    async function performSearch() {\n      return await fetch(`https://api.scryfall.com/cards/search?q=${searchText.current.value}`).then(result => result.json()).then(json => setSearchResults(json.data));\n    }\n\n    performSearch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-builder\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: searchText,\n        id: \"search-text\",\n        name: \"search-text\",\n        placeholder: \"Search Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"search-button\",\n        name: \"search-button\",\n        onClick: submitSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/deck-builder\",\n      exact: true,\n      component: \"DeckView\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/deck-builder/search\",\n      exact: true,\n      render: () => /*#__PURE__*/_jsxDEV(SearchResults, {\n        searchResults: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 69\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckBuilder, \"TvC4IkMIIyymjj8vJuZPKrk8q9c=\");\n\n_c = DeckBuilder;\nexport default DeckBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"sources":["/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckBuilder.js"],"names":["useState","useEffect","useContext","useRef","ContextInformation","SearchResults","DeckView","DeckBuilder","context","searchText","searchResults","setSearchResults","console","log","submitSearch","e","preventDefault","performSearch","fetch","current","value","then","result","json","data"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAMC,OAAO,GAAGN,UAAU,CAACE,kBAAD,CAA1B;AACA,QAAMK,UAAU,GAAGN,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAAEO,aAAF,EAAiBC,gBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;;AAIA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,mBAAeC,aAAf,GAA+B;AAC3B,aAAO,MAAMC,KAAK,CAAE,2CAA0CT,UAAU,CAACU,OAAX,CAAmBC,KAAM,EAArE,CAAL,CACAC,IADA,CACKC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADf,EAEAF,IAFA,CAEKE,IAAI,IAAIZ,gBAAgB,CAACY,IAAI,CAACC,IAAN,CAF7B,CAAb;AAGH;;AAEDP,IAAAA,aAAa;AAChB,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAER,UAAxB;AAAoC,QAAA,EAAE,EAAC,aAAvC;AAAqD,QAAA,IAAI,EAAC,aAA1D;AAAwE,QAAA,WAAW,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,eAAxB;AAAwC,QAAA,IAAI,EAAC,eAA7C;AAA6D,QAAA,OAAO,EAAEK;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,KAAK,MAAjC;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,sBAAZ;AAAmC,MAAA,KAAK,MAAxC;AAAyC,MAAA,MAAM,EAAE,mBAAO,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEJ;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA9BQH,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect, useContext, useRef } from 'react';\n\nimport ContextInformation from \"./ContextInformation\";\nimport SearchResults from './SearchResults';\nimport DeckView from './DeckView';\n\nfunction DeckBuilder() {\n    const context = useContext(ContextInformation);\n    const searchText = useRef(null);\n    const [ searchResults, setSearchResults ] = useState([]);\n\n    useEffect(() => {\n        console.log(searchResults);\n    }, [searchResults])\n\n    const submitSearch = (e) => {\n        e.preventDefault();\n        async function performSearch() {\n            return await fetch(`https://api.scryfall.com/cards/search?q=${searchText.current.value}`)\n                        .then(result => result.json())\n                        .then(json => setSearchResults(json.data));\n        }\n\n        performSearch();\n    }\n\n    return(\n        <div className=\"deck-builder\">\n            <form>\n                <input type=\"text\" ref={searchText} id=\"search-text\" name=\"search-text\" placeholder=\"Search Text\" />\n                <input type=\"submit\" id=\"search-button\" name=\"search-button\" onClick={submitSearch} />\n            </form>\n            <Route path=\"/deck-builder\" exact component=\"DeckView\" />\n            <Route path=\"/deck-builder/search\" exact render={() => (<SearchResults searchResults={searchResults} />)} />\n        </div>\n    )\n}\n\nexport default DeckBuilder;"]},"metadata":{},"sourceType":"module"}