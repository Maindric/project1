{"ast":null,"code":"var _jsxFileName = \"/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckView.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport ContextInformation from \"./ContextInformation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const context = useContext(ContextInformation);\n\n  const removeCard = (e, card, index, deck) => {\n    e.preventDefault();\n    let newDeck = [...deck];\n    card.count--;\n\n    if (card.count === 0) {\n      newDeck.splice(index, 1);\n    } else {\n      newDeck[index] = card;\n    }\n\n    context.setDeck(newDeck);\n  };\n\n  const addCard = (e, card, index, deck) => {\n    e.preventDefault();\n    let newDeck = [...deck];\n    card.count++;\n    newDeck[index] = card;\n    context.setDeck(newDeck);\n  };\n\n  const renderCard = (card, index, deck) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [card.name, \" \", card.type, \" x\", card.count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => removeCard(e, card, index, deck),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => addCard(e, card, index, deck),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Deck Builder!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), context.deck.map(renderCard)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckView, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckView.js"],"names":["useContext","ContextInformation","DeckView","context","removeCard","e","card","index","deck","preventDefault","newDeck","count","splice","setDeck","addCard","renderCard","name","type","map"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAIA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,OAAO,GAAGH,UAAU,CAACC,kBAAD,CAA1B;;AAEA,QAAMG,UAAU,GAAG,CAACC,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,KAA0B;AACzCH,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,OAAO,GAAG,CAAC,GAAGF,IAAJ,CAAd;AACAF,IAAAA,IAAI,CAACK,KAAL;;AACA,QAAGL,IAAI,CAACK,KAAL,KAAe,CAAlB,EAAqB;AACjBD,MAAAA,OAAO,CAACE,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACH,KAFD,MAEO;AACHG,MAAAA,OAAO,CAACH,KAAD,CAAP,GAAiBD,IAAjB;AACH;;AACDH,IAAAA,OAAO,CAACU,OAAR,CAAgBH,OAAhB;AACH,GAVD;;AAYA,QAAMI,OAAO,GAAG,CAACT,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,KAA0B;AACtCH,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,OAAO,GAAG,CAAC,GAAGF,IAAJ,CAAd;AACAF,IAAAA,IAAI,CAACK,KAAL;AACAD,IAAAA,OAAO,CAACH,KAAD,CAAP,GAAiBD,IAAjB;AACAH,IAAAA,OAAO,CAACU,OAAR,CAAgBH,OAAhB;AACH,GAND;;AAQA,QAAMK,UAAU,GAAG,CAACT,IAAD,EAAOC,KAAP,EAAcC,IAAd,KAAuB;AAEtC,wBAAQ;AAAA,iBACKF,IAAI,CAACU,IADV,OACiBV,IAAI,CAACW,IADtB,QAC8BX,IAAI,CAACK,KADnC,eAEI;AAAQ,QAAA,OAAO,EAAEN,CAAC,IAAID,UAAU,CAACC,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEH,CAAC,IAAIS,OAAO,CAACT,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKL,OAAO,CAACK,IAAR,CAAaU,GAAb,CAAiBH,UAAjB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtCQb,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import { useContext } from 'react';\n\nimport ContextInformation from \"./ContextInformation\";\n\n\n\nfunction DeckView() {\n    const context = useContext(ContextInformation);\n\n    const removeCard = (e, card, index, deck) => {\n        e.preventDefault();\n        let newDeck = [...deck];\n        card.count--;\n        if(card.count === 0) {\n            newDeck.splice(index, 1);\n        } else {\n            newDeck[index] = card;\n        }\n        context.setDeck(newDeck);\n    }\n\n    const addCard = (e, card, index, deck) => {\n        e.preventDefault();\n        let newDeck = [...deck];\n        card.count++;\n        newDeck[index] = card;\n        context.setDeck(newDeck);\n    }\n\n    const renderCard = (card, index, deck) => {\n\n        return (<div>\n                    {card.name} {card.type} x{card.count}\n                    <button onClick={e => removeCard(e, card, index, deck)}>-</button>\n                    <button onClick={e => addCard(e, card, index, deck)}>+</button>\n                </div>);\n    }\n\n    return (\n        <div className=\"deck-view\">\n            <p>Deck Builder!</p>\n            {context.deck.map(renderCard)}\n        </div>\n    );\n}\n\nexport default DeckView;"]},"metadata":{},"sourceType":"module"}