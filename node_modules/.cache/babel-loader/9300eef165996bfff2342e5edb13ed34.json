{"ast":null,"code":"var _jsxFileName = \"/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckBuilder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport ContextInformation from \"./ContextInformation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckBuilder() {\n  _s();\n\n  const context = useContext(ContextInformation);\n  const searchText = useRef(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const submitSearch = e => {\n    e.preventDefault();\n\n    async function performSearch() {// return await fetch(`https://api.scryfall.com/cards/search?q=${searchText.current.value}`)\n      //             .then(result => result.json());\n    }\n\n    setSearchResults(performSearch());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-builder\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: searchText,\n        id: \"search-text\",\n        name: \"search-text\",\n        placeholder: \"Search Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"search-button\",\n        name: \"search-button\",\n        onClick: submitSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), context.deck.map(card => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [card.name, \" \", card.type, \" x\", card.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckBuilder, \"zRAJVVagPkNrLU4VurDpag0j1nA=\");\n\n_c = DeckBuilder;\nexport default DeckBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"sources":["/home/maindric/web/Supra_Coders/project1/my-app/src/components/DeckBuilder.js"],"names":["useState","useEffect","useContext","useRef","ContextInformation","DeckBuilder","context","searchText","searchResults","setSearchResults","submitSearch","e","preventDefault","performSearch","deck","map","card","name","type","count"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAMC,OAAO,GAAGJ,UAAU,CAACE,kBAAD,CAA1B;AACA,QAAMG,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAAEK,aAAF,EAAiBC,gBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;;AAIA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,mBAAeC,aAAf,GAA+B,CAC3B;AACA;AACH;;AAEDJ,IAAAA,gBAAgB,CAACI,aAAa,EAAd,CAAhB;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAEN,UAAxB;AAAoC,QAAA,EAAE,EAAC,aAAvC;AAAqD,QAAA,IAAI,EAAC,aAA1D;AAAwE,QAAA,WAAW,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,eAAxB;AAAwC,QAAA,IAAI,EAAC,eAA7C;AAA6D,QAAA,OAAO,EAAEG;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKJ,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAiBC,IAAI,iBAAI;AAAA,iBAAIA,IAAI,CAACC,IAAT,OAAgBD,IAAI,CAACE,IAArB,QAA6BF,IAAI,CAACG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA3BQd,W;;KAAAA,W;AA6BT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect, useContext, useRef } from 'react';\n\nimport ContextInformation from \"./ContextInformation\";\n\nfunction DeckBuilder() {\n    const context = useContext(ContextInformation);\n    const searchText = useRef(null);\n    const [ searchResults, setSearchResults ] = useState([]);\n\n\n\n    const submitSearch = (e) => {\n        e.preventDefault();\n        async function performSearch() {\n            // return await fetch(`https://api.scryfall.com/cards/search?q=${searchText.current.value}`)\n            //             .then(result => result.json());\n        }\n\n        setSearchResults(performSearch());\n    }\n\n    return(\n        <div className=\"deck-builder\">\n            <form>\n                <input type=\"text\" ref={searchText} id=\"search-text\" name=\"search-text\" placeholder=\"Search Text\" />\n                <input type=\"submit\" id=\"search-button\" name=\"search-button\" onClick={submitSearch} />\n            </form>\n\n            {context.deck.map(card => <p>{card.name} {card.type} x{card.count}</p>)}\n        </div>\n    )\n}\n\nexport default DeckBuilder;"]},"metadata":{},"sourceType":"module"}