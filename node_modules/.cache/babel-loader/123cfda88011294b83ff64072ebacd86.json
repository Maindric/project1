{"ast":null,"code":"var _jsxFileName = \"/home/maindric/web/Supra_Coders/project1/my-app/src/components/SearchResults.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  const addToDeck = (e, index) => {\n    e.preventDefault();\n    const newCard = props.searchResults[index];\n    const searchForCard = context.deck.filter((card, deckIndex) => {\n      if (card.id === newCard.id) {\n        const newDeck = [...context.deck];\n        newDeck[deckIndex].count++;\n        context.setDeck(newDeck);\n        return true;\n      }\n\n      return false;\n    });\n\n    if (searchForCard.length === 0) {\n      newCard.count = 1;\n      context.setDeck([...context.deck, newCard]);\n    }\n  };\n\n  return props.searchResults.map((card, index) => {\n    const imageUrl = card.image_uris ? card.image_uris.small : \"https://imgs.smoothradio.com/images/191589?crop=16_9&width=660&relax=1&signature=Rz93ikqcAz7BcX6SKiEC94zJnqo=\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [card.name, \" \", card.type, \" \", card.cmc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: card.oracle_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => addToDeck(e, index),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this);\n  });\n}\n\n_c = SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/home/maindric/web/Supra_Coders/project1/my-app/src/components/SearchResults.js"],"names":["SearchResult","props","addToDeck","e","index","preventDefault","newCard","searchResults","searchForCard","context","deck","filter","card","deckIndex","id","newDeck","count","setDeck","length","map","imageUrl","image_uris","small","name","type","cmc","oracle_text"],"mappings":";;;AAAA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC5BD,IAAAA,CAAC,CAACE,cAAF;AACA,UAAMC,OAAO,GAAGL,KAAK,CAACM,aAAN,CAAoBH,KAApB,CAAhB;AACA,UAAMI,aAAa,GAAGC,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoB,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC3D,UAAGD,IAAI,CAACE,EAAL,KAAYR,OAAO,CAACQ,EAAvB,EAA2B;AACvB,cAAMC,OAAO,GAAG,CAAC,GAAGN,OAAO,CAACC,IAAZ,CAAhB;AACAK,QAAAA,OAAO,CAACF,SAAD,CAAP,CAAmBG,KAAnB;AACAP,QAAAA,OAAO,CAACQ,OAAR,CAAgBF,OAAhB;AACA,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH,KARqB,CAAtB;;AASA,QAAGP,aAAa,CAACU,MAAd,KAAyB,CAA5B,EAA+B;AAC3BZ,MAAAA,OAAO,CAACU,KAAR,GAAgB,CAAhB;AACAP,MAAAA,OAAO,CAACQ,OAAR,CAAgB,CAAC,GAAGR,OAAO,CAACC,IAAZ,EAAkBJ,OAAlB,CAAhB;AACH;AACJ,GAhBD;;AAkBA,SACIL,KAAK,CAACM,aAAN,CAAoBY,GAApB,CAAwB,CAACP,IAAD,EAAOR,KAAP,KAAiB;AACzC,UAAMgB,QAAQ,GAAGR,IAAI,CAACS,UAAL,GAAkBT,IAAI,CAACS,UAAL,CAAgBC,KAAlC,GAA0C,+GAA3D;AACA,wBAAQ;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEF,QAAV;AAAoB,QAAA,GAAG,EAAER,IAAI,CAACW;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBAAIX,IAAI,CAACW,IAAT,OAAgBX,IAAI,CAACY,IAArB,OAA4BZ,IAAI,CAACa,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIb,IAAI,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEvB,CAAC,IAAID,SAAS,CAACC,CAAD,EAAIC,KAAJ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKgB,GAPhB,CADJ;AAUH;;KA7BQJ,Y","sourcesContent":["function SearchResult(props) {\n    const addToDeck = (e, index) => {\n        e.preventDefault();\n        const newCard = props.searchResults[index];\n        const searchForCard = context.deck.filter((card, deckIndex) => {\n            if(card.id === newCard.id) {\n                const newDeck = [...context.deck];\n                newDeck[deckIndex].count++;\n                context.setDeck(newDeck);\n                return true;\n            }\n            return false;\n        });\n        if(searchForCard.length === 0) {\n            newCard.count = 1;\n            context.setDeck([...context.deck, newCard]);\n        }   \n    }\n\n    return(\n        props.searchResults.map((card, index) => {\n        const imageUrl = card.image_uris ? card.image_uris.small : \"https://imgs.smoothradio.com/images/191589?crop=16_9&width=660&relax=1&signature=Rz93ikqcAz7BcX6SKiEC94zJnqo=\";\n        return (<div>\n                    <img src={imageUrl} alt={card.name} />\n                    <p>{card.name} {card.type} {card.cmc}</p>\n                    <p>{card.oracle_text}</p>\n                    <button onClick={e => addToDeck(e, index)}>+</button>\n                </div>)})\n    )\n}"]},"metadata":{},"sourceType":"module"}